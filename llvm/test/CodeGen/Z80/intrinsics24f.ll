; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=ez80 < %s | FileCheck %s --check-prefixes=EZ80

declare float @llvm.powi.f32.i24(float, i24)
define float @powi.f32.i24(float, i24) {
; EZ80-LABEL: powi.f32.i24:
; EZ80:       ; %bb.0:
; EZ80-NEXT:    push ix
; EZ80-NEXT:    ld ix, 0
; EZ80-NEXT:    add ix, sp
; EZ80-NEXT:    ld e, (ix + 9)
; EZ80-NEXT:    ld bc, (ix + 12)
; EZ80-NEXT:    push bc
; EZ80-NEXT:    pop hl
; EZ80-NEXT:    push bc
; EZ80-NEXT:    pop iy
; EZ80-NEXT:    add iy, iy
; EZ80-NEXT:    sbc hl, hl
; EZ80-NEXT:    ld a, l
; EZ80-NEXT:    call __ltof
; EZ80-NEXT:    ld l, a
; EZ80-NEXT:    push hl
; EZ80-NEXT:    push bc
; EZ80-NEXT:    ld l, e
; EZ80-NEXT:    push hl
; EZ80-NEXT:    ld hl, (ix + 6)
; EZ80-NEXT:    push hl
; EZ80-NEXT:    call _powf
; EZ80-NEXT:    ld sp, ix
; EZ80-NEXT:    pop ix
; EZ80-NEXT:    ret
  call float @llvm.powi.f32.i24(float %0, i24 %1)
  ret float %3
}
declare double @llvm.powi.f64.i24(double, i24)
define double @powi.f64.i24(double, i24) {
; EZ80-LABEL: powi.f64.i24:
; EZ80:       ; %bb.0:
; EZ80-NEXT:    push ix
; EZ80-NEXT:    ld ix, 0
; EZ80-NEXT:    add ix, sp
; EZ80-NEXT:    ld bc, (ix + 15)
; EZ80-NEXT:    push bc
; EZ80-NEXT:    pop hl
; EZ80-NEXT:    push bc
; EZ80-NEXT:    pop iy
; EZ80-NEXT:    add iy, iy
; EZ80-NEXT:    sbc hl, hl
; EZ80-NEXT:    push hl
; EZ80-NEXT:    pop de
; EZ80-NEXT:    push bc
; EZ80-NEXT:    pop hl
; EZ80-NEXT:    ; kill: def $e killed $e killed $ude
; EZ80-NEXT:    call __ltod
; EZ80-NEXT:    ; kill: def $bc killed $bc def $ubc
; EZ80-NEXT:    push bc
; EZ80-NEXT:    push de
; EZ80-NEXT:    push hl
; EZ80-NEXT:    ld hl, (ix + 12)
; EZ80-NEXT:    push hl
; EZ80-NEXT:    ld hl, (ix + 9)
; EZ80-NEXT:    push hl
; EZ80-NEXT:    ld hl, (ix + 6)
; EZ80-NEXT:    push hl
; EZ80-NEXT:    call _pow
; EZ80-NEXT:    ld sp, ix
; EZ80-NEXT:    pop ix
; EZ80-NEXT:    ret
  call double @llvm.powi.f64.i24(double %0, i24 %1)
  ret double %3
}
